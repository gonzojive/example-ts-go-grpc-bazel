load("@rules_proto//proto:defs.bzl", "proto_library")
load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")

load("@npm_bazel_labs//:index.bzl", "ts_proto_library")

# gazelle:exclude frontendpb.pb.go
proto_library(
    name = "frontendpb_proto",
    srcs = ["frontend.proto"],
    visibility = ["//visibility:public"],
)

ts_proto_library(
    # The result will be "car.d.ts" named after this target.
    # We could use the output_name attribute if we want the output named
    # differently than the target.
    name = "frontendpb_ts_proto",
    proto = ":frontendpb_proto",
    visibility = ["//visibility:public"],
)

go_proto_library(
    name = "frontendpb_go_proto",
    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
    importpath = "github.com/gonzojive/energy-costs/web/viz/httpserver/frontendpb",
    proto = ":frontendpb_proto",
    visibility = ["//visibility:public"],
)

go_library(
    name = "go_default_library",
    embed = [":frontendpb_go_proto"],
    importpath = "github.com/gonzojive/energy-costs/web/viz/httpserver/frontendpb",
    visibility = ["//visibility:public"],
)
